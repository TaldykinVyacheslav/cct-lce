(()=>{"use strict";var t={599:t=>{const{AbortController:e,AbortSignal:n}="undefined"!=typeof self?self:"undefined"!=typeof window?window:void 0;t.exports=e,t.exports.AbortSignal=n,t.exports.default=e},300:(t,e)=>{var n=function(){if("undefined"!=typeof self)return self;if("undefined"!=typeof window)return window;if(void 0!==n)return n;throw new Error("unable to locate global object")}();t.exports=e=n.fetch,n.fetch&&(e.default=n.fetch.bind(n)),e.Headers=n.Headers,e.Request=n.Request,e.Response=n.Response},200:(t,e,n)=>{n(300),n(508),n(325)},508:(t,e,n)=>{Object.defineProperty(e,"__esModule",{value:!0}),e.LCE=void 0;const a=n(300),r=n(599);class s{constructor({datacenters:t,agent:e}){this.datacenters=t,this.agent=e,this.cancelableLatencyRequests=[],this.cancelableBandwidthRequests=[],this.terminateAllCalls=!1}async runLatencyCheckForAll(){const t=[];this.datacenters.forEach((e=>{t.push(this.getLatencyFor(e))}));const e=await t,n=(await Promise.all(e)).filter((t=>null!==t));return n.sort(this.compare),this.cancelableLatencyRequests=[],n}async runBandwidthCheckForAll(){try{const t=[];for(const e of this.datacenters){if(this.terminateAllCalls)break;const n=await this.getBandwidthFor(e);t.push(n)}const e=t.filter((t=>null!==t));return e.sort(this.compare),this.cancelableBandwidthRequests=[],e}catch(t){return null}}getBandwidthForId(t){const e=this.datacenters.find((e=>e.id===t));return e?this.getBandwidthFor(e):null}getLatencyForId(t){const e=this.datacenters.find((e=>e.id===t));return e?this.getLatencyFor(e):null}async getLatencyFor(t){try{const e=Date.now();await this.latencyFetch(`https://${t.ip}/drone/index.html`);const n=Date.now();return{id:t.id,latency:n-e,cloud:t.cloud,name:t.name,town:t.town,country:t.country,latitude:t.latitude,longitude:t.longitude,ip:t.ip,timestamp:Date.now()}}catch(t){return null}}async getBandwidthFor(t){const e=Date.now(),n=await this.bandwidthFetch(`https://${t.ip}/drone/big`);if(null!==n){const a=Date.now(),r=await n.text(),i=s.calcBandwidth(r.length,a-e);return{id:t.id,bandwidth:i,cloud:t.cloud,name:t.name,town:t.town,country:t.country,latitude:t.latitude,longitude:t.longitude,ip:t.ip}}return null}bandwidthFetch(t){const e=new r.AbortController,{signal:n}=e;return this.cancelableBandwidthRequests.push(e),this.abortableFetch(t,n)}latencyFetch(t){const e=new r.AbortController,{signal:n}=e;return this.cancelableLatencyRequests.push(e),this.abortableFetch(t,n)}async abortableFetch(t,e){try{return await a.default(t,{signal:e})}catch(t){return console.log(t),null}}compare(t,e){return t.latency<e.latency?-1:t.latency>e.latency?1:0}terminate(){this.terminateAllCalls=!0,this.cancelableLatencyRequests.forEach((t=>{t.abort()})),this.cancelableBandwidthRequests.forEach((t=>{t.abort()})),this.cancelableLatencyRequests=[],this.cancelableBandwidthRequests=[],this.terminateAllCalls=!1}static calcBandwidth(t,e){const n=8*t/(e/1e3),a=n/1e3;return{bitsPerSecond:n,kiloBitsPerSecond:a,megaBitsPerSecond:a/1e3}}}e.LCE=s},325:(t,e)=>{Object.defineProperty(e,"__esModule",{value:!0}),e.Util=void 0;class n{static deepCopy(t){return JSON.parse(JSON.stringify(t))}static getAverageLatency(t){return t?t.reduce(((t,e)=>t+e),0)/t.length:-1}static getAverageBandwidth(t){if(t){const e=t.reduce(((t,e)=>({bitsPerSecond:t.bitsPerSecond+e.bitsPerSecond,kiloBitsPerSecond:t.kiloBitsPerSecond+e.kiloBitsPerSecond,megaBitsPerSecond:t.megaBitsPerSecond+e.megaBitsPerSecond})));return{bitsPerSecond:e.bitsPerSecond/t.length,kiloBitsPerSecond:e.kiloBitsPerSecond/t.length,megaBitsPerSecond:e.megaBitsPerSecond/t.length}}return{bitsPerSecond:-1,kiloBitsPerSecond:-1,megaBitsPerSecond:-1}}static sortDatacenters(t){return t.sort(((t,e)=>t.averageLatency-e.averageLatency)),t.forEach(((t,e)=>{t.position=e+1})),t}static getTop3(t){return n.sortDatacenters(t).slice(0,3)}static sleep(t){return new Promise((e=>setTimeout(e,t)))}}e.Util=n}},e={};function n(a){if(e[a])return e[a].exports;var r=e[a]={exports:{}};return t[a](r,r.exports,n),r.exports}n(508),n(200),n(325)})();